on:
  push:
    branches:
      - main
      # - prod
jobs:
  package:
    name: package
    runs-on: ubuntu-latest
    env:
      REGISTRY: europe-docker.pkg.dev/waves-425519/cr
      PROJECT_ID: waves-425519
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get short SHA
        id: get-short-sha
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
      - name: GCP login ☁️
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - name: Set env and container storage directory
        id: set-env
        run: |
          if [ "$GITHUB_REF_NAME" == "main" ]; then
            echo "CONTAINER_PATH=preview" >> $GITHUB_OUTPUT;
            echo "${{ secrets.DEV_ENV }}" | base64 -d > app/.env;
          elif [ "$GITHUB_REF_NAME" == "prod" ]; then
            echo "CONTAINER_PATH=prod" >> $GITHUB_OUTPUT;
            echo "${{ secrets.PROD_ENV }}" | base64 -d > app/.env;
          else
            echo "Unknown branch: $GITHUB_REF_NAME"
            exit 1
          fi
      - name: Build and publish
        uses: docker/build-push-action@v5
        with:
          file: ./iac/Dockerfile
          context: ./app
          build-args: ENV_FILE=.env
          tags: ${{ env.REGISTRY }}/${{ steps.set-env.outputs.CONTAINER_PATH }}.app:${{ steps.get-short-sha.outputs.SHORT_SHA }}
          push: true
  deployment:
    name: deployment
    runs-on: ubuntu-latest
    needs: package
    env:
      REGISTRY: europe-docker.pkg.dev/waves-425519/cr
      PROJECT_ID: waves-425519
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get short SHA
        id: get-short-sha
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
      - name: GCP login ☁️
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.2
      - name: Set Terraform Path
        id: set-tf-path
        run: |
          if [ "$GITHUB_REF_NAME" == "main" ]; then
            echo "TF_PATH=preview" >> $GITHUB_OUTPUT;
          elif [ "$GITHUB_REF_NAME" == "prod" ]; then
            echo "TF_PATH=prod" >> $GITHUB_OUTPUT;
          else
            echo "Unknown branch: $GITHUB_REF_NAME"
            exit 1
          fi
      - name: Terraform apply 🚀
        working-directory: iac/${{ steps.set-tf-path.outputs.TF_PATH }}
        env:
          TF_VAR_gcp_project_id: ${{ env.PROJECT_ID }}
          TF_VAR_container_image_name: ${{ env.REGISTRY }}/${{ steps.set-tf-path.outputs.TF_PATH }}.app:${{ steps.get-short-sha.outputs.SHORT_SHA }}
        run: |
          terraform init
          terraform plan
          terraform apply -auto-approve
